import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import useAuth from "../hooks/auth";
import { useState, useEffect, FormEvent } from "react";
import styles from "../styles/Home.module.css";
import JoinGroup from "../components/JoinGroup";
import AddGroup from "../components/AddGroup";

interface Group {
  id: string;
  name: string;
  owner: string;
  reads: any[];
  members: Set<any>;
}

export default function Home() {
  const { authenticated, logout } = useAuth();
  const [groups, setGroups] = useState<Group[]>([]);

  useEffect(() => {
    if (authenticated) {
      fetch("https://buddy-reads-backend.herokuapp.com/groups/", {
        headers: {
          Authorization: `Bearer ${localStorage.accessToken}`,
        },
      })
        .then((res) => res.json())
        .then((json) => setGroups(json));
    }
  }, [authenticated]);

  return (
    <div className={styles.container}>
      <Head>
        <title>BuddyReads | Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.main}>
        <div className={styles.top}>
        <h1 className={styles.centered}>Home</h1>
        {authenticated ? (
          <button className={styles.logout} onClick={(e) => logout()}>
            Logout
          </button>
        ) : (
          <Link href="/login">
            <a className={styles.signin}>Sign In</a>
          </Link>
        )}
        </div>

        {
          !authenticated &&
          <>
            <Image src="/mother-child.png" alt="Mother and Child Reading" width="300" height="300" />
            <h2 className={styles.tagline}>Read More. Spoil Less.</h2>
            <p className={styles.copy}>With Buddy Reads, you can read with your friends at your own pace, without the risk of spoilers.</p>
          </>
        }

        {authenticated && (
          <>
            <JoinGroup />
            <AddGroup />

            <h2>My Groups</h2>
            {groups.map((group) => (
              <div className={styles.groupListing} key={group.id}>
                <Link href={`/groups/${group.id}`}>
                  <a>{group.name}</a>
                </Link>
              </div>
            ))}
          </>
        )}
      </div>
    </div>
  );
}
