import { GetServerSideProps } from "next";
import Head from "next/head";
import { FormEvent, useEffect, useState } from "react";
import differenceInSeconds from "date-fns/differenceInSeconds";
import parseISO from "date-fns/parseISO";
import styles from "../../styles/Groups.module.css";

interface Message {
  id: string;
  owner: string;
  username: string;
  read: string;
  progress: number;
  content: string;
  createdAt: string;
}

interface ReadPageProps {
  id: string;
  name: string;
  read: string;
}

export default function ReadPage({ id, name }: ReadPageProps) {
  const [messages, setMessages] = useState<Message[]>([]);
  const [progressInput, setProgressInput] = useState("");
  const [progress, setProgress] = useState(0);
  const [messageInput, setMessageInput] = useState("");

  const onMessageSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    fetch("https://buddy-reads-backend.herokuapp.com/messages", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${localStorage.getItem("accessToken")}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        content: messageInput,
        progress,
        read: id,
      }),
    })
      .then((res) => res.json())
      .then((message) => [message, ...messages])
      .then((unsortedMessages) => {
        unsortedMessages.sort(
          (a: Message, b: Message) => b.progress - a.progress
        );
        setMessages(unsortedMessages);
      })
      .then(() => setMessageInput(""));
  };

  useEffect(() => {
    fetch(`https://buddy-reads-backend.herokuapp.com/progress/${id}`, {
      headers: {
        Authorization: `Bearer ${localStorage.getItem("accessToken")}`,
      },
    })
      .then((res) => {
        if (res.status === 500) {
          return { progress: 0 };
        }
        return res.json();
      })
      .then((data) => setProgress(data.progress));
  }, [id]);

  const onSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    fetch("https://buddy-reads-backend.herokuapp.com/progress/", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${localStorage.getItem("accessToken")}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        progress: parseInt(progressInput),
        read: id,
      }),
    })
      .then((res) => res.json())
      .then((data) => setProgress(data.progress));
    setProgressInput("");
  };

  useEffect(() => {
    fetch(`https://buddy-reads-backend.herokuapp.com/messages/${id}`, {
      headers: {
        Authorization: `Bearer ${localStorage.getItem("accessToken")}`,
      },
    })
      .then((res) => res.json())
      .then((data) => {
        data.sort((a: Message, b: Message) => {
          return (
            b.progress - a.progress ||
            differenceInSeconds(parseISO(b.createdAt), parseISO(a.createdAt))
          );
        });
        setMessages(data);
      });
  }, [progress, id]);

  return (
    <div className={styles.container}>
      <Head>
        <title>{name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.main}>
        <div className={styles.topContainer}>
          <h1>{name}</h1>
          <h2>Current Progress - {progress}%</h2>
          <form onSubmit={onSubmit}>
            <input
              className={styles.input}
              value={progressInput}
              onChange={(e) => setProgressInput(e.target.value)}
              placeholder="Progress"
            ></input>
            <button className={styles.button} type="submit">
              Submit
            </button>
          </form>
        </div>
        <form className={styles.messagesForm} onSubmit={onMessageSubmit}>
          <input
            className={styles.messageInput}
            value={messageInput}
            onChange={(e) => setMessageInput(e.target.value)}
            placeholder="Type here"
          ></input>
          <button className={styles.button} type="submit">
            Submit
          </button>
        </form>
        <div className={styles.messages}>
          {messages.map((message) => (
            <p className={styles.message} key={message.id}>
              {message.content} - {message.username} {message.progress}%
            </p>
          ))}
        </div>
      </div>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const readRes = await fetch(
    `https://buddy-reads-backend.herokuapp.com/reads/${context.params!.id}`
  );
  const read = await readRes.json();

  if (read.err) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      ...read,
    },
  };
};
